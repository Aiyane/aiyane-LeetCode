#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# 格雷编码.py
"""
格雷编码是一个二进制数字系统，在该系统中，两个连续的数值仅有一个位数的差异。
给定一个代表编码总位数的非负整数 n，打印其格雷编码序列。格雷编码序列必须以 0 开头。

示例 1:
输入: 2
输出: [0,1,3,2]
解释:
00 - 0
01 - 1
11 - 3
10 - 2

对于给定的 n，其格雷编码序列并不唯一。
例如，[0,2,3,1] 也是一个有效的格雷编码序列。

00 - 0
10 - 2
11 - 3
01 - 1

示例 2:
输入: 0
输出: [0]
解释: 我们定义格雷编码序列必须以 0 开头。
     给定编码总位数为 n 的格雷编码序列，其长度为 2^n。当 n = 0 时，长度为 2^0 = 1。
     因此，当 n = 0 时，其格雷编码序列为 [0]。
"""
"""
思路：如下推导
-> [0, 1] # n == 1
-> [0, 1, 11]
-> [0, 10, 11]
-> [0, 10, 11, 01]
-> [00, 10, 11, 01] # n == 2
-> [00, 10, 11, 01]
-> [00, 10, 11, 01, 011]
-> [00, 10, 11, 010, 011]
-> [00, 10, 11, 010, 011, 111]
-> [00, 10, 110, 010, 011, 111]
-> [00, 10, 110, 010, 011, 111, 101]
-> [00, 100, 110, 010, 011, 111, 101]
-> [00, 100, 110, 010, 011, 111, 101, 001]
-> [000, 100, 110, 010, 011, 111, 101, 001] # n == 3
最优解如下：
def grayCode(n):
    return [i ^ (i >> 1) for i in range(1 << n)]
解释：
2**n == 1<<n
^ 是异或
使用二进制码转格雷码的公式如下：
Gray[i] = Gray[i-1]^B[i]
"""
__author__ = 'Aiyane'


class Solution:
    def grayCode(self, n):
        """
        :type n: int
        :rtype: List[int]
        """
        if n == 0:
            return [0]
        res = self.grayCode(n-1)
        i = len(res) - 1
        while i >= 0:
            res.append(int(bin(res[i])[2:] + '1', 2))
            res[i] = int(bin(res[i])[2:] + '0', 2)
            i -= 1
        return res
